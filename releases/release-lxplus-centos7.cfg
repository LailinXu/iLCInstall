# this config file is actually python code, just to let emacs know: -*- mode: Python; -*-
#########################################################################################
#
# Configuration file for installing EUTelescope and the required ILC Software Packages
#
# This config sets up a installation for CERN LXPLUS infrastructure, running on Centos7
# machines, sourcing dependencies from CVMFS (sft.cern.ch), e.g. CMake and ROOT.
# 
# For checking which version of packages to install, have a look at 
# releases/release-versions.py 
#
##############################################################################

# Whether or not to create 32-bit binaries on 64-bit systems:
# (32-bit systems will automatically be switched to 32-bits)
force_32bit = False


# --------- set up package versions with ilcsoft's defaults: ------------
import os, sys
import platform
from distutils.version import StrictVersion, LooseVersion

# read package versions from external file provided by ilcinstall
path_where_this_file_lives = os.path.dirname( config_file )
where_ilcinstall_lives = os.path.dirname( os.path.abspath( __file__ ))

versions_file = os.path.join( where_ilcinstall_lives, "releases", "release-versions.py" )
execfile( versions_file )


# --------- determine install dir ----------------------------------------------
# path can be set by the user with setting the ILCSOFT environment variable e.g. "export ILCSOFT=~/ilcsoft"
if not os.environ.get('ILCSOFT') is None:
    ilcsoft_install_prefix = str(os.environ.get('ILCSOFT'))
else:
    ilcsoft_install_prefix = os.path.dirname( where_ilcinstall_lives )

ilcsoft_install_dir = os.path.join( ilcsoft_install_prefix, ilcsoft_release )
ilcsoft = ILCSoft( ilcsoft_install_dir )


# --------- package versions and paths (distribution dependent) --------------------------
Java_path = "/usr"
#sourcing from cvmfs
GSL_path = "/cvmfs/sft.cern.ch/lcg/releases/LCG_94/GSL/2.5/x86_64-centos7-gcc62-opt"
CMake_path = "/cvmfs/sft.cern.ch/lcg/releases/LCG_94/CMake/3.11.1/x86_64-centos7-gcc62-opt"
CLHEP_path = "/cvmfs/sft.cern.ch/lcg/releases/LCG_94/clhep/2.4.1.0/x86_64-centos7-gcc62-opt"
Eigen_path = "/cvmfs/sft.cern.ch/lcg/releases/LCG_94/eigen/3.2.9/x86_64-centos7-gcc62-opt"
ROOT_path = "/cvmfs/sft.cern.ch/lcg/releases/LCG_94/ROOT/6.14.04/x86_64-centos7-gcc62-opt"

# ------------------ global compiler options -----------------------------------------------
ilcsoft.env["MAKEOPTS"]="-j4"
ilcsoft.env["CXX"]="g++"
ilcsoft.env["CC"]="gcc"
ilcsoft.env["FC"]="gfortran"
ilcsoft.env["CXXFLAGS"]="-std=c++14 -fPIC"
#to build 32-bit mode on 64-bit machines set force_32bit in the beginning of this file
if force_32bit or platform.machine() == "i386":
   ilcsoft.env["CXXFLAGS"]="-m32 -std=c++14 -fPIC"
   ilcsoft.env["CFLAGS"]="-m32"
   ilcsoft.env["FFLAGS"]="-m32"
   ilcsoft.env["LDFLAGS"]="-m32"
   ilcsoft.envcmake["BUILD_32BIT_COMPATIBLE"]="ON"

#build and install documentation
ilcsoft.envcmake["INSTALL_DOC"]="OFF"
ilcsoft.envcmake["CMAKE_BUILD_TYPE"]= "Release"
#set to c++14
ilcsoft.envcmake["CMAKE_CXX_STANDARD"]=14
ilcsoft.envcmake["CMAKE_CXX_STANDARD_REQUIRED"]="ON"
ilcsoft.envcmake["CMAKE_CXX_EXTENSIONS"]="OFF"
ilcsoft.downloadType = "svn"


# --------------- install required packages or use/link them if already installed  ----

# Java
if 'Java_path' in dir():
    ilcsoft.use( Java( Java_path ))

# Eigen
ilcsoft.use( Eigen( Eigen_path ))

# ILCUTIL
ilcsoft.install( ILCUTIL( ILCUTIL_version ))

# LCIO
ilcsoft.install( LCIO( LCIO_version )) 
#build optional ROOT dictionary for LCIO (set to OFF, if you don't want it)
ilcsoft.module("LCIO").envcmake['BUILD_ROOTDICT']='OFF'
ilcsoft.module("LCIO").envcmake['INSTALL_JAR']='OFF'

# GEAR
ilcsoft.install( GEAR( GEAR_version )) 
ilcsoft.module("GEAR").envcmake['GEAR_TGEO']='ON'
ilcsoft.module("GEAR").envcmake['ROOT_DIR']=ROOT_path

# LCCD
ilcsoft.install( LCCD( LCCD_version ))
ilcsoft.module("LCCD").envcmake['LCCD_CONDDBMYSQL']='OFF'

# RAIDA
ilcsoft.install( RAIDA( RAIDA_version ))
ilcsoft.module("RAIDA").envcmake['ROOT_DIR']=ROOT_path

# GBL
ilcsoft.install( GBL( GBL_version ))
ilcsoft.module("GBL").envcmake['ROOT_DIR']=ROOT_path

# Marlin
ilcsoft.install( Marlin( Marlin_version ))
ilcsoft.module("Marlin").envcmake["MARLIN_GUI"] = 'OFF'

# EUTelescope 
ilcsoft.install( Eutelescope( Eutelescope_version ))
ilcsoft.module("Eutelescope").env['EUDAQ_VERSION']= Eudaq_version
ilcsoft.module("Eutelescope").env['MILLEPEDEII_VERSION']= Millepede2_version
ilcsoft.module("Eutelescope").envcmake['ROOT_DIR']=ROOT_path

# CLHEP
ilcsoft.use( CLHEP( CLHEP_path ))

# GSL
ilcsoft.use( GSL( GSL_path ))

# ROOT
ilcsoft.use( ROOT( ROOT_path ))

# CMake
ilcsoft.use( CMake( CMake_path  ))

#------ end of configuration file -------------------------------------------
